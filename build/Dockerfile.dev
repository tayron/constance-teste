FROM php:7.2.14-fpm-stretch

MAINTAINER Tayron Miranda <contato@tayron.com.br>

RUN apt-get update

RUN apt-get install -y \
        net-tools \
        nginx \
        vim \
        git \
    --no-install-recommends

RUN curl -LO https://deployer.org/deployer.phar \
	&& mv deployer.phar /usr/local/bin/dep \
	&& chmod +x /usr/local/bin/dep \
	&& dep self-update	


RUN docker-php-ext-install pdo_mysql 
RUN apt-get update && apt-get install -y \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        libpng-dev \
    && docker-php-ext-install -j$(nproc) iconv \
    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
    && docker-php-ext-install -j$(nproc) gd


RUN apt-get install -y \
        libintl-perl \
        libicu-dev \
    && docker-php-ext-configure intl \
    && docker-php-ext-install intl

RUN apt-get install -y \
        libzip-dev \
        unzip \
    && docker-php-ext-configure zip --with-libzip \
    && docker-php-ext-install zip

RUN apt-get install -y \
        libmcrypt-dev \
    && pecl install mcrypt-1.0.2 \
    && docker-php-ext-enable mcrypt
#    && docker-php-ext-install opcache

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

## PHP CS exemplo de utilização: php ~/phpcs.phar --standard=PSR2 src/Controller/PagesController.php 
RUN cd ~ && curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
RUN pear install PHP_CodeSniffer
RUN cd /var/www/html && composer global require "squizlabs/php_codesniffer=*"

RUN pecl install xdebug-2.6.0

# Install New Relic
RUN apt-get update
RUN apt-get install -y gnupg
RUN apt-get install -y gnupg2
RUN apt-get install -y wget

# Install New Relic
RUN set -x && DEBIAN_FRONTEND=noninteractive \
  && wget -O - https://download.newrelic.com/548C16BF.gpg | apt-key add - \
  && echo "deb http://apt.newrelic.com/debian/ newrelic non-free" > /etc/apt/sources.list.d/newrelic.list \
  && apt-get update \
  && apt-get install -y newrelic-php5 \
  && newrelic-install install \
  && rm -rf /var/lib/apt/lists/*

RUN apt-get purge --auto-remove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /usr/src/php*

RUN usermod -u 1000 www-data

RUN rm -rf /etc/nginx/conf.d/* \
    rm -f /etc/nginx/nginx.conf

RUN ln -snf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime && echo America/Sao_Paulo > /etc/timezone

COPY ./nginx/nginx.conf /etc/nginx/
COPY ./nginx/projeto.conf /etc/nginx/conf.d/

COPY ./php/php_dev.ini /usr/local/etc/php/conf.d/php.ini
COPY ./php/xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini
#COPY ./php/opcache.ini /usr/local/etc/php/conf.d/opcache.ini

COPY ./newrelic.ini /usr/local/etc/php/conf.d/newrelic.ini

COPY ./deployer/deploy.sh /home/deploy.sh
COPY ./deployer/rollback.sh /home/rollback.sh

COPY ./start.sh /scripts/start.sh
COPY ./set_ip_externo_etc_host.sh /scripts/set_ip_externo_etc_host.sh

WORKDIR /var/www/html

RUN chmod -Rf 755 /scripts

EXPOSE 80

CMD ["/scripts/start.sh"]
